<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace nanoapi;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class TopicConfirmationOptions extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return TopicConfirmationOptions
     */
    public static function getRootAsTopicConfirmationOptions(ByteBuffer $bb)
    {
        $obj = new TopicConfirmationOptions();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return TopicConfirmationOptions
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return sbyte
     */
    public function getConfirmationTypeFilter()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \nanoapi\TopicConfirmationTypeFilter::all;
    }

    /**
     * @return bool
     */
    public function getAllLocalAccounts()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /**
     * @param int offset
     * @return string
     */
    public function getAccounts($j)
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($this->__vector($o) + $j * 4) : 0;
    }

    /**
     * @return int
     */
    public function getAccountsLength()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__vector_len($o) : 0;
    }

    /**
     * @return bool
     */
    public function getIncludeBlock()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : true;
    }

    /**
     * @return bool
     */
    public function getIncludeElectionInfo()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : true;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startTopicConfirmationOptions(FlatBufferBuilder $builder)
    {
        $builder->StartObject(5);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return TopicConfirmationOptions
     */
    public static function createTopicConfirmationOptions(FlatBufferBuilder $builder, $confirmation_type_filter, $all_local_accounts, $accounts, $include_block, $include_election_info)
    {
        $builder->startObject(5);
        self::addConfirmationTypeFilter($builder, $confirmation_type_filter);
        self::addAllLocalAccounts($builder, $all_local_accounts);
        self::addAccounts($builder, $accounts);
        self::addIncludeBlock($builder, $include_block);
        self::addIncludeElectionInfo($builder, $include_election_info);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addConfirmationTypeFilter(FlatBufferBuilder $builder, $confirmationTypeFilter)
    {
        $builder->addSbyteX(0, $confirmationTypeFilter, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addAllLocalAccounts(FlatBufferBuilder $builder, $allLocalAccounts)
    {
        $builder->addBoolX(1, $allLocalAccounts, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addAccounts(FlatBufferBuilder $builder, $accounts)
    {
        $builder->addOffsetX(2, $accounts, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param array offset array
     * @return int vector offset
     */
    public static function createAccountsVector(FlatBufferBuilder $builder, array $data)
    {
        $builder->startVector(4, count($data), 4);
        for ($i = count($data) - 1; $i >= 0; $i--) {
            $builder->putOffset($data[$i]);
        }
        return $builder->endVector();
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int $numElems
     * @return void
     */
    public static function startAccountsVector(FlatBufferBuilder $builder, $numElems)
    {
        $builder->startVector(4, $numElems, 4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addIncludeBlock(FlatBufferBuilder $builder, $includeBlock)
    {
        $builder->addBoolX(3, $includeBlock, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addIncludeElectionInfo(FlatBufferBuilder $builder, $includeElectionInfo)
    {
        $builder->addBoolX(4, $includeElectionInfo, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endTopicConfirmationOptions(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
