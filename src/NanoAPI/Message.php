<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace MikeRow\NanoPHP\NanoAPI;

class Message
{
    const NONE = 0;
    const Error = 1;
    const Success = 2;
    const IsAlive = 3;
    const EventAck = 4;
    const BlockInfo = 5;
    const AccountWeight = 6;
    const AccountWeightResponse = 7;
    const TopicConfirmation = 8;
    const EventConfirmation = 9;
    const ServiceRegister = 10;
    const ServiceStop = 11;
    const TopicServiceStop = 12;
    const EventServiceStop = 13;

    private static $names = array(
        Message::NONE=>"NONE",
        Message::Error=>"Error",
        Message::Success=>"Success",
        Message::IsAlive=>"IsAlive",
        Message::EventAck=>"EventAck",
        Message::BlockInfo=>"BlockInfo",
        Message::AccountWeight=>"AccountWeight",
        Message::AccountWeightResponse=>"AccountWeightResponse",
        Message::TopicConfirmation=>"TopicConfirmation",
        Message::EventConfirmation=>"EventConfirmation",
        Message::ServiceRegister=>"ServiceRegister",
        Message::ServiceStop=>"ServiceStop",
        Message::TopicServiceStop=>"TopicServiceStop",
        Message::EventServiceStop=>"EventServiceStop",
    );

    public static function Name($e)
    {
        if (!isset(self::$names[$e])) {
            throw new \Exception();
        }
        return self::$names[$e];
    }
}
